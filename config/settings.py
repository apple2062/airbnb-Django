"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 장고 documentation 에 따르면, MEDIA_ROOT는 절대 파일 경로를 가져야만 해. 그런게 고맙게도,
# 우리는 이미 위와같은 절대 경로 패스를 가지고 있다.
# print(BASE_DIR)를 찍어보면, /Users/iyeonju/document/airbnb-clone이라는 절대 경로를 나타내고 있다.
# 따라서 이 경로에, 더하기 (내가 만들 폴더명) 을 join 해주면, 우리가 원하는 경로를 만들 수 있다!


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "tu$f$losa4%rpc$9l%uxs08&d0=f1--7=&6gihu8pw)r3$@s2f"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

DJANGO_APPS = [  # 기존 장고 INSTALLES_APPS에 이미 설치되어있던 앱
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

THIRD_PARTY_APPS = [  # 내가 아닌 다른 사람이 만든 applecion 을 넣어놓기 위함
    "djaongo_countries",
    "django_seed",
]

PROJECT_APPS = [  # 내가 만든 어플리케이션 설치
    "core.apps.CoreConfig",
    "users.apps.UsersConfig",  # 이를 통해 장고가 User 인식함
    "rooms.apps.RoomsConfig",
    "reviews.apps.ReviewsConfig",
    "reservations.apps.ReservationsConfig",
    "lists.apps.ListsConfig",
    "conversations.apps.ConversationsConfig",
]

INSTALLED_APPS = DJANGO_APPS + PROJECT_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_L10N = True

USE_TZ = False  # USE_TZ가 True일 때는 templates, forms에서의 datetime에만 내가 설정한 TIME_ZONE이 적용된다. 따라서 models의 datetime에는
# 이 부분이 적용되지 않았기 때문에 원래의 default time zone인 'UTC' 값으로 계속 설정되었던 것이다.
# 나는 models에서도 내가 설정한 TIME_ZONE 값을 적용하고 싶기 때문에 이 부분을 False로 바꾸어 주었다.


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"

AUTH_USER_MODEL = "users.User"  # 디폴트 값이 아닌 우리가 만든 user app


MEDIA_ROOT = os.path.join(BASE_DIR, "uploads")
# uploads 라는 폴더의 이름에 나의 모든 photos들을 넣어줄거임! , print(MEDIA_ROOT) >> /Users/iyeonju/documents/airbnb-clone/uploads

MEDIA_URL = "/media/"  # (#8.4) media_url 에 뭘 쓰던 간에, 다루는 것은 media_root폴더(=uploads) 안의 파일들, + media+url 은 / 로 끝나냐한다(by documentation)
# 이제 uploads 폴더로부터 무언가 가져오고 싶다면 /media/avatar-photos 형식으로 가야한다. 그래서 uploads 폴더명은 사라질 것이다.
# media/avatar-photos/(아무거나) 이렇게 할 수 있고, 그래서 uploads 디렉토리를 MEDIA_URL 과 연결을 해야한다.
# 이때, 위와같이 media/ 형태라면 이는 상대경로로서, 루트에서부터 시작하는 경로가 아니라는 것. root/media/ 가 되어야 절대 경로가 되는 것이다.
# 따라서, "media/"가 아닌 "/media/" 로 지정함으로서, 루트에서부터 시작하는 media 경로 생성.(http://127.0.0.1:8000/media/room-photos/ooo.jpg 이렇게!)

# Email Configuration
EMAIL_HOST = "smtp.mailgun.org"
EMAIL_PORT = "587"
EMAIL_USER = 
EMAIL_HOST_PASSWORD = 